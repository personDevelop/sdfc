//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace AuthorityClient.MsgSendOrderSer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MsgSendOrderSer.IMsgSendOrderService")]
    public interface IMsgSendOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMsgSendOrderService/GetAllMsg", ReplyAction="http://tempuri.org/IMsgSendOrderService/GetAllMsgResponse")]
        System.Data.DataTable GetAllMsg();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMsgSendOrderService/GetAllMsgByStatus", ReplyAction="http://tempuri.org/IMsgSendOrderService/GetAllMsgByStatusResponse")]
        System.Data.DataTable GetAllMsgByStatus(string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMsgSendOrderService/GetMySenderMsg", ReplyAction="http://tempuri.org/IMsgSendOrderService/GetMySenderMsgResponse")]
        System.Data.DataTable GetMySenderMsg(string senderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMsgSendOrderService/GetMyReciveMsg", ReplyAction="http://tempuri.org/IMsgSendOrderService/GetMyReciveMsgResponse")]
        System.Data.DataTable GetMyReciveMsg(string reciverID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMsgSendOrderService/AddMsg", ReplyAction="http://tempuri.org/IMsgSendOrderService/AddMsgResponse")]
        int AddMsg(System.Data.DataTable dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMsgSendOrderService/AddOneMsgToMutilsPerson", ReplyAction="http://tempuri.org/IMsgSendOrderService/AddOneMsgToMutilsPersonResponse")]
        int AddOneMsgToMutilsPerson(string msg, string senderID, string senderName, string senderTel, string[] reciverIDS, string[] reciverNames, string[] reciverTelPhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMsgSendOrderService/UpdateStatus", ReplyAction="http://tempuri.org/IMsgSendOrderService/UpdateStatusResponse")]
        int UpdateStatus(string[] msgID, string Status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMsgSendOrderServiceChannel : AuthorityClient.MsgSendOrderSer.IMsgSendOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MsgSendOrderServiceClient : System.ServiceModel.ClientBase<AuthorityClient.MsgSendOrderSer.IMsgSendOrderService>, AuthorityClient.MsgSendOrderSer.IMsgSendOrderService {
        
        public MsgSendOrderServiceClient() {
        }
        
        public MsgSendOrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MsgSendOrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MsgSendOrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MsgSendOrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetAllMsg() {
            return base.Channel.GetAllMsg();
        }
        
        public System.Data.DataTable GetAllMsgByStatus(string status) {
            return base.Channel.GetAllMsgByStatus(status);
        }
        
        public System.Data.DataTable GetMySenderMsg(string senderID) {
            return base.Channel.GetMySenderMsg(senderID);
        }
        
        public System.Data.DataTable GetMyReciveMsg(string reciverID) {
            return base.Channel.GetMyReciveMsg(reciverID);
        }
        
        public int AddMsg(System.Data.DataTable dt) {
            return base.Channel.AddMsg(dt);
        }
        
        public int AddOneMsgToMutilsPerson(string msg, string senderID, string senderName, string senderTel, string[] reciverIDS, string[] reciverNames, string[] reciverTelPhone) {
            return base.Channel.AddOneMsgToMutilsPerson(msg, senderID, senderName, senderTel, reciverIDS, reciverNames, reciverTelPhone);
        }
        
        public int UpdateStatus(string[] msgID, string Status) {
            return base.Channel.UpdateStatus(msgID, Status);
        }
    }
}
