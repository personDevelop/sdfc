//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace AuthorityClient.UserInfoSer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserInfoSer.IUserInfoService")]
    public interface IUserInfoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserInfoService/GetAllUser", ReplyAction="http://tempuri.org/IUserInfoService/GetAllUserResponse")]
        System.Data.DataTable GetAllUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserInfoService/Save", ReplyAction="http://tempuri.org/IUserInfoService/SaveResponse")]
        int Save(AuthorityEntity.UserInfo DataObject, AuthorityEntity.OrganizationInfo[] Departlist, AuthorityEntity.Role[] Rolelist, ref string error);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserInfoService/Exists", ReplyAction="http://tempuri.org/IUserInfoService/ExistsResponse")]
        bool Exists(string code, string email, string iD, ref string error);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserInfoService/ResetPwd", ReplyAction="http://tempuri.org/IUserInfoService/ResetPwdResponse")]
        int ResetPwd(string userid, string newpwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserInfoService/DeleteUser", ReplyAction="http://tempuri.org/IUserInfoService/DeleteUserResponse")]
        int DeleteUser(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserInfoService/BatchSetOrg", ReplyAction="http://tempuri.org/IUserInfoService/BatchSetOrgResponse")]
        int BatchSetOrg(string[] ids, string[] orgIds, string[] companyIDS, string positionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserInfoService/BatchSetRole", ReplyAction="http://tempuri.org/IUserInfoService/BatchSetRoleResponse")]
        int BatchSetRole(string[] ids, string[] roleids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserInfoService/GetDepartInfo", ReplyAction="http://tempuri.org/IUserInfoService/GetDepartInfoResponse")]
        AuthorityEntity.OrganizationInfo GetDepartInfo(string userID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserInfoServiceChannel : AuthorityClient.UserInfoSer.IUserInfoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserInfoServiceClient : System.ServiceModel.ClientBase<AuthorityClient.UserInfoSer.IUserInfoService>, AuthorityClient.UserInfoSer.IUserInfoService {
        
        public UserInfoServiceClient() {
        }
        
        public UserInfoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserInfoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserInfoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserInfoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetAllUser() {
            return base.Channel.GetAllUser();
        }
        
        public int Save(AuthorityEntity.UserInfo DataObject, AuthorityEntity.OrganizationInfo[] Departlist, AuthorityEntity.Role[] Rolelist, ref string error) {
            return base.Channel.Save(DataObject, Departlist, Rolelist, ref error);
        }
        
        public bool Exists(string code, string email, string iD, ref string error) {
            return base.Channel.Exists(code, email, iD, ref error);
        }
        
        public int ResetPwd(string userid, string newpwd) {
            return base.Channel.ResetPwd(userid, newpwd);
        }
        
        public int DeleteUser(string userid) {
            return base.Channel.DeleteUser(userid);
        }
        
        public int BatchSetOrg(string[] ids, string[] orgIds, string[] companyIDS, string positionID) {
            return base.Channel.BatchSetOrg(ids, orgIds, companyIDS, positionID);
        }
        
        public int BatchSetRole(string[] ids, string[] roleids) {
            return base.Channel.BatchSetRole(ids, roleids);
        }
        
        public AuthorityEntity.OrganizationInfo GetDepartInfo(string userID) {
            return base.Channel.GetDepartInfo(userID);
        }
    }
}
